#!/bin/bash

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
cert_file=""
deleteTmpAfterUse=false
help="$0 -c /path/to/certfile [-d to delete temp cert files after command output] [ -o \"-subject -enddate -noout\" use to modify ssl flags ] [ -n nopretty, don't prettify name to match CN, instead name certs according to their place in the bundle, use if structure matters, if you're modifying a bundle. To create a new bundle after modification, simply cat certs/* >> newBundle.pem ] "
nodeletion=false
opensslFlags=""
prettifyName=true
if [ $# -lt "1" ]
then
        echo "$help"
        exit 1
fi
while getopts "c:do:nh?" opt; do
    case "$opt" in
    c)  cert_file=$OPTARG
        ;;
    d)  deleteTmpAfterUse=true
        ;;
    o)  opensslFlags="$OPTARG"
        ;;
    n)  prettifyName="false"
        ;;
    *)  echo $help
        exit 1
        ;;
    esac
done

shift $((OPTIND-1))

[ "${1:-}" = "--" ] && shift

if [ -z "$opensslFlags" ]
then
        opensslFlags="-issuer -subject -dates -noout"
fi

if [ -d "./certs" ]
then
        if [ "$deleteTmpAfterUse" = "true" ]
        then
                nodeletion="./certs exists prior to split command, will not force deletion after output. Delete manually."
        fi
else
        $(mkdir ./certs)
fi

output=$(csplit -f ./certs/cert- $cert_file '%-----BEGIN CERTIFICATE-----%' '/-----BEGIN CERTIFICATE-----/' '{*}')
cd .
echo "---------------"
for filename in certs/cert*;do
        if [ "$prettifyName" = "true" ]
        then
                newname=$(openssl x509 -in $filename -noout -subject -nameopt multiline  | sed -n 's/ *commonName *= //p').pem
                newname=$(echo $newname | sed 's/ /_/g')
                mv $filename certs/$newname
                filename="certs/$newname"
        fi
        filePath="certs/$filename"
        enddate=`openssl x509 -in "$filename" -noout -enddate`
        date=$(date '+%s')
        enddateTimeStamp=$(echo "$enddate" | cut -d'=' -f2)
        unixTime=$(date -d "$enddateTimeStamp" '+%s')
        if [[ $unixTime -lt $date ]];then
                expired="\e[1;31mEXPIRED\e[0m"
        fi
        echo "filename: $filename"
        openssl x509 -in "$filename" $opensslFlags
        if [ ! -z "$expired" ];then
                echo -e $expired
        fi
        echo "-----------------"
        expired=""
        #echo "$filename:"
        #openssl x509 $opensslFlags -in certs/$filename
done
if [ "$nodeletion" != "false" ]
then
        echo "$nodeletion"
elif [ "$deleteTmpAfterUse" = "true" ]
then
        $(rm -r ./certs)
fi
exit 0
